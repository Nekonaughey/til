Q. 公開鍵自身がID？それともIDに公開鍵が紐づくイメージ？
A. 公開鍵がID
IDを誰が生成するのか？UUIDで自分で生成したとしよう。(仮にID=Aとしよう)
ID=Aに、自分の秘密鍵で署名して「私がAです」と名乗ったとしよう。

攻撃者が、ID=Aに、攻撃者の鍵で署名して、「私がAです」と名乗ったら区別できなくなる。
公開鍵(=ID)に対応する秘密鍵を持っていることで「自分がこのIDであること」を証明できる。


ここに鍵の移転という概念を考えてみる。
鍵A(=IDA)だった人が、鍵を変更したいと考えた。
鍵B(=IDB)に単純に変えてしまうと、IDが変わってしまうので、IDAで署名したデータなどが無効になってしまう。
あるいは両方管理し続ける必要が出てくる。

なので、鍵B(=IDA)という状態にすることを鍵の移転と呼んでみる。
鍵Aで、鍵Bに対して権限移譲の証明書を発行することで、鍵B(=IDA)という状態を表現できると考える。

鍵A -> 鍵B -> 鍵C -> ・・・鍵Xと移行していくと、鍵Xの正しさを検証するためには、
何十回も辿っていかないといけないので、Webのようなトランザクションの多いところでは使えないと思うが、
トランザクションが少ない、かつ変更回数が少ないなら役立つ局面はありそう。


SSLなどの場合、中間認証局やルート認証局の鍵を簡単に変更できない。
結果、原則変更しない運用になっている。
しかし、中間認証局がサーバ証明書を発行する場合、誰かしら（人 or プログラム）が鍵を触っているわけで、
人なら権限を持っていたユーザがやめるかもしれないし、プログラムなら脆弱性があったかもしれない。
定期的なローテーションができないというのはいまいち。


なので、移転という概念を、と思ったが、トランザクション数を考えるとローテーションした分を辿ってたらやってられない気はする。
