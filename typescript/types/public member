●publicメンバだけの型を抽出したい場合
https://github.com/microsoft/TypeScript/issues/18499#issuecomment-429272545


@renatomariscal @jandsu
You can create such a type easily yourself with keyof, it only picks the public members.

type Public<T> = { [P in keyof T]: T[P] }


●ちゃんと読んでないけど、フィールドだけ抜きだしたい場合だと思われる
https://stackoverflow.com/questions/55479658/how-to-create-a-type-excluding-instance-methods-from-a-class-in-typescript

From your example, it seems like you want the result to contain only fields (as opposed to only properties). 
Here is a type that picks out the fields from an object or class instance.
type DataPropertyNames<T> = {
  [K in keyof T]: T[K] extends Function ? never : K;
}[keyof T];

type DataPropertiesOnly<T> = {
  [P in DataPropertyNames<T>]: T[P] extends object ? DTO<T[P]> : T[P]
};

export type DTO<T> = DataPropertiesOnly<T>;
