hooks = usecase層。apiのimpl
apiの公開 = hooksの公開、あるいはhooksを使ったUIの公開。

reduxのstore = cache repository

外部apiからの取得 = real repository.ネットワーク越しのrepository；


外部apiから取ってくるのもイベント経由だし、アクション発行しただけでは戻りがないからどうしたもんか。


registerSomething => 内部でイベントが呼ばれる？


hooksがユースケース層だというのはイマイチだと思うが、
画面を開発するときに、薄い切れ目が必要なのは間違いない。

バックエンドをMock化すればよい、という話になってしまうと、
じゃSagaやらReduxStoreやら全部作るのか、と。

画面イメージ作成ならStoreから取らずにStateで良くて、
hookから何が返ってきてるかなんて気にしない仕組みにしたい。
