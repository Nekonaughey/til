色々試してみたけど、他のパッケージからimportする場合、そのパッケージの一部のモジュールしか利用しない場合でも、

そのパッケージの依存関係がbundleに含まれてしまう様子。パッケージがesモジュールだったらtree-shakingの対象になるっぽい。
 a -> b -> semantic-ui　という参照方向で、aからbのうちsemantic-uiを使ってない部分だけをimportしてみた。
semantic-uiはesモジュールなのでバンドルされなかった。
が、semantic-uiが利用しているlodashなどはバンドルされた。ひどい。
webpackはとにかく一度依存関係ツリーを作って、そこからesモジュールのうち、未使用のものを落としていく様子。
依存関係ツリーに含まれ、esモジュールじゃないものは強制的にバンドルされる。
xx-uiなどの自作パッケージはesモジュールにしておいた方がtree-shakingの対象になるので良い。
バックエンドはcommonjsで良いと思うが、フロントエンドはcommonjsにしておくメリットはほとんどなし。


tsconfigで
target es6　
module es6 
module-resolution node

index.tsでまとめてexportなどはnode形式でしか使えない。
moduleをes6にすると、resolutionもデフォルトでesになってしまうので、nodeで上書きする。
