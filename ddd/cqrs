コマンドクエリ責務分離とは　CQRSパターンのもとになっている原則は、
コマンドとクエリを分解するアーキテクチャパターンであるCQS（CommandQuerySeparation）です。

これはBertrandMeyer氏が書籍『オブジェクト指向入門』（アスキー、1990年）にて提唱しました。
実装レベルに要約すると次の2つに分けられます。

1.コマンド（Write）：オブジェクトの状態を変更するメソッドは値を戻してはいけない。 
 戻り値の型はVoid である 


2. クエリ（Read）：メソッドが型や値を戻す場合、オブジェクトの状態を変更してはいけない 　 


従来のプログラミングでは、更新と取得を同じメソッドで記述していたかもしれませんが、
CQRSでは「更新メソッド」と「結果取得メソッド」として明確に2つに分離します。

WINGSプロジェクト青木淳夫.「実践ドメイン駆動設計」から学ぶDDDの実装入門CodeZineDigitalFirst(Kindleの位置No.908-916).株式会社翔泳社.Kindle版.


この辺見た方が良い。
https://vladikk.com/2017/03/20/tackling-complexity-in-cqrs/
https://lostechies.com/jimmybogard/2012/08/22/busting-some-cqrs-myths/


イベントからエンティティを組み立てる時、時間がかかるようならスナップショットを使うという話が書いてある。
逆に言えば、パフォーマンスに問題がないなら都度イベントからくみ立てるようだ。
https://geeks-world.github.io/articles/J322214/index.html
